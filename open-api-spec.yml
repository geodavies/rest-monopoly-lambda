openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'REST Monopoly'
  description: 'A RESTful implementation of the Monopoly board game'
paths:
  /games:
    post:
      summary: Create a new game
      operationId: createGame
      tags:
        - Games
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameRequest'
      responses:
        '200':
          description: Game created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '401':
          description: Unauthorized
        '502':
          description: Bad Gateway
  /games/{gameId}:
    get:
      summary: Get a game
      operationId: getGame
      tags:
        - Games
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Game retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/players:
    get:
      summary: Get all players
      operationId: getPlayers
      tags:
        - Players
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Players retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/players/{playerId}:
    get:
      summary: Get a player
      operationId: getPlayer
      tags:
        - Players
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
        - in: path
          name: playerId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Player retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/titles/properties/{titleId}:
    get:
      summary: Get a property title
      operationId: getProperty
      tags:
        - Titles
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
        - in: path
          name: titleId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Property retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/titles/utilities/{utilityId}:
    get:
      summary: Get a utility title
      operationId: getUtility
      tags:
        - Titles
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
        - in: path
          name: utilityId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Utility retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Utility'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/titles/stations/{stationId}:
    get:
      summary: Get a station title
      operationId: getStation
      tags:
        - Titles
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
        - in: path
          name: stationId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Station retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/trades:
    get:
      summary: Get all trades
      operationId: getTrades
      tags:
        - Trades
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Trades retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trade'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
    post:
      summary: Create a new trade
      operationId: createTrade
      tags:
        - Trades
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TradeRequest'
      responses:
        '200':
          description: Trade created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/trades/{tradeId}:
    get:
      summary: Get a trade
      operationId: getTrade
      tags:
        - Trades
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
        - in: path
          name: tradeId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Trade retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trade'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
  /games/{gameId}/logs:
    get:
      summary: Get all logs
      operationId: getLogs
      tags:
        - Logs
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
        - in: query
          name: limitResults
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Logs retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '502':
          description: Bad Gateway
components:
  schemas:
    GameRequest:
      required:
        - name
      properties:
        name:
          type: string
      additionalProperties: false
    Game:
      properties:
        id:
          type: string
        name:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        titles:
          properties:
            properties:
              type: array
              items:
                $ref: '#/components/schemas/Property'
            utilities:
              type: array
              items:
                $ref: '#/components/schemas/Utility'
            stations:
              type: array
              items:
                $ref: '#/components/schemas/Station'
        logs:
          type: array
          items:
            type: string
    Player:
      properties:
        id:
          type: string
        name:
          type: string
        money:
          type: integer
        position:
          type: integer
          minimum: 1
          maximum: 40
        rolled:
          type: boolean
          default: false
        turn:
          type: boolean
          default: false
        jail:
          properties:
            inJail:
              type: boolean
              default: false
            turns:
              type: integer
              default: 0
              minimum: 0
              maximum: 3
            getOutOfJailFreeCards:
              type: integer
              default: 0
              minimum: 0
              maximum: 2
    Property:
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: integer
          default: null
        mortgaged:
          type: boolean
          default: false
        houses:
          type: integer
          minimum: 0
          maximum: 4
          default: 0
        hotels:
          type: integer
          minimum: 0
          maximum: 1
          default: 0
        rent:
          type: array
          items:
            type: integer
          minItems: 5
          maxItems: 5
        price:
          properties:
            purchase:
              type: integer
              minimum: 0
            house:
              type: integer
              minimum: 0
            hotel:
              type: integer
              minimum: 0
            mortgage:
              type: integer
              minimum: 0
    Utility:
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: integer
          default: null
        mortgaged:
          type: boolean
          default: false
        price:
          properties:
            purchase:
              type: integer
              default: 0
            mortgage:
              type: integer
              minimum: 0
    Station:
      properties:
        id:
          type: string
        name:
          type: string
        owner:
          type: integer
          default: null
        mortgaged:
          type: boolean
          default: false
        rent:
          type: array
          items:
            type: integer
            minItems: 4
            maxItems: 4
        price:
          properties:
            purchase:
              type: integer
              minimum: 0
            mortgage:
              type: integer
              minimum: 0
    TradeRequest:
      required:
        - 'from'
        - 'to'
        - 'requestedItems'
        - 'reciprocalItems'
      properties:
        from:
          type: integer
        to:
          type: integer
        requestedItems:
          properties:
            money:
              type: integer
            titles:
              properties:
                properties:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 21
                stations:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 3
                utilities:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 1
        reciprocalItems:
          properties:
            money:
              type: integer
            titles:
              properties:
                properties:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 21
                stations:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 3
                utilities:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 1
    Trade:
      required:
        - 'id'
        - 'from'
        - 'to'
        - 'open'
        - 'accepted'
        - 'requestedItems'
        - 'reciprocalItems'
      properties:
        id:
          type: string
        from:
          type: string
        to:
          type: string
        open:
          type: boolean
          default: true
        accepted:
          type: boolean
          default: false
        requestedItems:
          properties:
            money:
              type: integer
            titles:
              properties:
                properties:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 21
                stations:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 3
                utilities:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 1
        reciprocalItems:
          properties:
            money:
              type: integer
            titles:
              properties:
                properties:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 21
                stations:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 3
                utilities:
                  type: array
                  items:
                    type: integer
                    minimum: 0
                    maximum: 1
